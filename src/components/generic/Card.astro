---
import { colors } from "src/data/colors.json";

interface Props {
  color?: string | undefined;
  wrapper?: boolean;
}

// Filter out blue and blue-green tinted colors for cards
const nonBlueColors = colors.filter((color) => {
  // Convert hex to RGB and check color components
  const r = parseInt(color.slice(1, 3), 16);
  const g = parseInt(color.slice(3, 5), 16);
  const b = parseInt(color.slice(5, 7), 16);
  // Exclude blues and any colors where green and blue are both high
  return !(b > r && b > g) && !(g > r && b >= r);
});

if (Astro.props.color === undefined) {
  Astro.props.color =
    nonBlueColors[Math.floor(Math.random() * nonBlueColors.length)];
}

const { color, wrapper = true } = Astro.props;
---

<style define:vars={{ color: color }}>
  div.brutal-card {
    background-color: var(--color);
    border-radius: 0.5rem;
    border: 3px solid black;
    filter: drop-shadow(7px 7px 0 rgb(0 0 0 / 1));
    transition: all;
    padding: 1rem;
    /* transition-duration: 0.5s; */
    /* animation: ease-in-out; */
  }
  /* div.brutal-card:hover {
    filter: drop-shadow(5px 5px 0 rgb(0 0 0 / 1));
  } */
</style>

{
  wrapper ? (
    <div class="brutal-card">
      <slot />
    </div>
  ) : (
    <slot />
  )
}
